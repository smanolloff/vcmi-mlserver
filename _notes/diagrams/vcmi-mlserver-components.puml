@startuml "python-to-cpp2"

!include <C4/C4_Container>
!include <tupadr3/devicons2/cplusplus>
!include <tupadr3/devicons2/python>

skinparam DefaultFontName monospaced
<style>
note {  MaximumWidth 500 }
</style>

' Used in place of " " where line wrapping is undesired
!$nbsp = "<U+00A0>"

HIDE_STEREOTYPE()
LAYOUT_LEFT_RIGHT()

AddRelTag("async", $textColor="#1400c9", $lineColor="#1400c9", $lineThickness="1", $lineStyle="dashed")
AddRelTag("dashed", $lineStyle="dashed")
AddRelTag("dotted", $lineStyle="dotted")

' AddElementTag("example", ?bgColor, ?fontColor, ?borderColor, ?shadowing, ?shape, ?sprite, ?techn, ?legendText, ?legendSprite, ?borderStyle, ?borderThickness): Introduces a new element tag. The styles of the tagged elements are updated and the tag is displayed in the calculated legend.
AddElementTag("executable", $bgColor="Salmon", $borderColor="Salmon")


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''' FUNCTIONS
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

' Replace $search with $repl within $txt
!function $replace($txt, $search, $repl)
  !$replaced = ""
  !while %strpos($txt, $search) >= 0
    !$position = %strpos($txt, $search)
    !$replaced = $replaced + %substr($txt, 0, $position) + $repl
    !$txt = %substr($txt, $position + %strlen($search))
  !endwhile
  !return $replaced + $txt
!endfunction

' Allows to define a string in multiple lines, replacing "\n"
' with actual newlines (note: all literal newlines must be escaped)
!function $str($txt)
  !return $replace($txt, "\n", %newline())
!endfunction

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''' CLASSES
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Container(vcmiservercommon, "vcmiservercommon")
Container(mlserverplugin, "mlserverplugin")
Container(vcmi, "vcmi")

Boundary(AI, "AI") {
  Container(VCAI, "VCAI")
  Container(StupidAI, "StupidAI")
  Container(MMAI, "MMAI")
  Container(AI_misc, "...")
}

Rel(connector, mlclient, "")
Rel(mlclient_gui, mlclient, "")
Rel(mlclient_headless, mlclient, "")
Rel(mlclient, vcmiclient, "")
Rel_R(mlclient, torch, "", $tags="dotted")
Rel(vcmiclient, vcmilauncher, "")
Rel(vcmiclient, vcmiservercommon, "")
Rel(vcmiclient, vcmi, "")
Rel(vcmilauncher, vcmi, "")
Rel(vcmiservercommon, vcmi, "")
Rel(vcmiservercommon, mlserverplugin, "")
Rel(mlserverplugin, vcmi, "")
Rel(vcmi, VCAI, "")
Rel(vcmi, StupidAI, "")
Rel(vcmi, MMAI, "")

' GymEnv <-> PyConnector : Function calls
' Rel(RL, GymEnv, "")
' Rel(GymEnv, PyConnector, "", "python interface")
' BiRel(PyConnector, CppConnector, "Asynchronous communication", "python c++ bindings", $tags="async")
' Rel(VCMI, CppConnector, "", "c++ interface")

' Lay_Distance(CppConnector, VCMI, 1)

@enduml
