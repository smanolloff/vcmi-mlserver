@startuml "vcmi-1.32-boot"

skinparam defaultTextAlignment center

title "VCMI-1.3.2 boot process"

' use "w"s to stretch image (VS code preview does not show full diagram)
title "VCMI-1.3.2 boot process wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"

!procedure $node($txt, $file, $line)
  :$txt

  <font color="gray">$file:$line</font>;
!endprocedure

!procedure $node1($txt, $file, $line, $fun)
  :$txt

  <font color="gray">$file:$line ""($fun)""</font>;
!endprocedure


!procedure $node2($txt, $f1, $l1, $fn1, $f2, $l2, $fn2)
  :$txt

  <font color="gray">$f1:$l1 ""($fn1)""</font>
  <font color="gray">$f2:$l2 ""($fn2)""</font>;
!endprocedure

!procedure $node3($txt, $f1, $l1, $fn1, $f2, $l2, $fn2, $f3, $l3, $fn3)
  :$txt

  <font color="gray">$f1:$l1 ""($fn1)""</font>
  <font color="gray">$f2:$l2 ""($fn2)""</font>
  <font color="gray">$f3:$l3 ""($fn3)""</font>;
!endprocedure

!procedure $node4($txt, $f1, $l1, $fn1, $f2, $l2, $fn2, $f3, $l3, $fn3, $f4, $l4, $fn4)
  :$txt

  <font color="gray">$f1:$l1 ""($fn1)""</font>
  <font color="gray">$f2:$l2 ""($fn2)""</font>
  <font color="gray">$f3:$l3 ""($fn3)""</font>
  <font color="gray">$f4:$l4 ""($fn4)""</font>;
!endprocedure

!procedure $node5($txt, $f1, $l1, $fn1, $f2, $l2, $fn2, $f3, $l3, $fn3, $f4, $l4, $fn4, $f5, $l5, $fn5)
  :$txt

  <font color="gray">$f1:$l1 ""($fn1)""</font>
  <font color="gray">$f2:$l2 ""($fn2)""</font>
  <font color="gray">$f3:$l3 ""($fn3)""</font>
  <font color="gray">$f4:$l4 ""($fn4)""</font>
  <font color="gray">$f5:$l5 ""($fn5)""</font>;
!endprocedure

!procedure $node6($txt, $f1, $l1, $fn1, $f2, $l2, $fn2, $f3, $l3, $fn3, $f4, $l4, $fn4, $f5, $l5, $fn5, $f6, $l6, $fn6)
  :$txt

  <font color="gray">$f1:$l1 ""($fn1)""</font>
  <font color="gray">$f2:$l2 ""($fn2)""</font>
  <font color="gray">$f3:$l3 ""($fn3)""</font>
  <font color="gray">$f4:$l4 ""($fn4)""</font>
  <font color="gray">$f5:$l5 ""($fn5)""</font>
  <font color="gray">$f6:$l6 ""($fn6)""</font>;
!endprocedure
skinparam DefaultTextAlignment left

start
$node1("outer main???", "CMT.cpp", 104, "main")
$node6("Register packet types", "CTypeList.cpp", 17, "", "CTypeList.cpp", 23, "CTypeList::CTypeList", "RegisterTypes.h", "411 (sample)", "registerTypes", "RegisterTypes.h", "338 (sample)", "registerTypesServerPacks", "CTypeList.h", 131, "template CTypeList::registerType", "CTypeList.cpp", 35, "CTypeList::registerType")
$node2("Register packet types", "RegisterTypes.h", "337-367", "registerTypesServerPacks", "CTypeList.h", 227, "CApplier::registerType")
$node1("Program start", "CGameHandler.cpp", 1060, "main")
$node3("Load <font:monospaced>config/settings.json</font>", "CVCMIServer.cpp", 1078, "main", "VCMI_Lib.cpp", 52, "preinitDLL", "CConfigHandler", 57, "SettingsStorage::init")
$node2("Bind network socket", "CVCMIServer.cpp", 1092, "main", "CVCMIServer.cpp", 140, "CVCMIServer::CVCMIServer")
$node1("Start server", "CVCMIServer.cpp", 1098, "main")
fork
  $node1("Wait for state == GAMEPLAY ...", "CVCMIServer.cpp", 200, "CVCMIServer::run")
fork again
  repeat
  $node3("Wait client connection ...", "CVCMIServer.cpp", 181, "CVCMIServer::run", "CVCMIServer.cpp", 349, "CVCMIServer::startAsyncAccept", "CVCMIServer.cpp", 369, "CVCMIServer::connectionAccepted")
  repeat while ()
  (C)
  note right: start connection thread
  detach
  (C)
  $node2("Wait for data ...", "CVCMIServer.cpp", 424, "CVCMIServer::threadHandleClient", "Connection.cpp", 272, "CConnection::retrievePack()")
  $node4("Get data handler (aka. 'applier')", "CVCMIServer.cpp", 446, "CVCMIServer::threadHandleClient", "NetPacksLib.cpp", 69, "CPackForServer::visitBasic", "CVCMIServer.cpp", 403, "CVCMIServerPackVisitor::visitForServer", "CGameHandler.cpp", 1254, "CGameHandler::handleReceivedPack")
  note right: eg. ""CApplyOnGH<LIB_SERVER::MoveHero>""

  :fdsfas;
end fork
$node("Start game", "CVMIServer.cpp", 207)
stop
@enduml
